
import { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Textarea } from '@/components/ui/textarea';
import { Button } from '@/components/ui/button';
import { PlusCircle, Baby } from 'lucide-react';
import { LogEntry } from '@/types';

interface NewLogFormProps {
  onAddLog: (log: LogEntry) => void;
}

const NewLogForm = ({ onAddLog }: NewLogFormProps) => {
  const [title, setTitle] = useState('');
  const [description, setDescription] = useState('');

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    if (!title || !description) return;

    const newLog: LogEntry = {
      id: Date.now(),
      timestamp: new Date().toISOString(),
      author: 'Parent',
      authorIcon: <Baby className="h-5 w-5 text-gray-500" />,
      original_entry: {
        title: title,
        description: description,
      },
      // In a real app, these would be generated by AI
      summary_for_teacher: `[AI Summary for Teacher]: Based on the parent's note about "${title}", please observe the child for related behaviors in the classroom environment.`,
      summary_for_doctor: `[AI Summary for Doctor]: Patient's parent reports: "${title}". Description: "${description}". Correlate with patient history.`,
      tags: ['new', 'manual entry'],
    };

    onAddLog(newLog);
    setTitle('');
    setDescription('');
  };

  return (
    <Card>
      <CardHeader>
        <CardTitle>Log a New Event</CardTitle>
        <CardDescription>
          What's happening? Log anythingâ€”a behavior, a feeling, a question for the doctor.
        </CardDescription>
      </CardHeader>
      <CardContent>
        <form onSubmit={handleSubmit} className="space-y-4">
          <Input
            placeholder="Title (e.g., 'Tummy ache after lunch')"
            value={title}
            onChange={(e) => setTitle(e.target.value)}
          />
          <Textarea
            placeholder="Describe what happened..."
            value={description}
            onChange={(e) => setDescription(e.target.value)}
            rows={5}
          />
          <Button type="submit" className="w-full">
            <PlusCircle className="mr-2 h-4 w-4" />
            Add to Timeline
          </Button>
        </form>
      </CardContent>
    </Card>
  );
};

export default NewLogForm;
